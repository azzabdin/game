{"version":3,"sources":["components/pics/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["picdisplay","props","react_default","a","createElement","Fragment","className","onClick","handleClick","id","alt","src","image","Wrapper","children","App","state","Pictures","score","highScore","count","shuffle","array","sort","Math","random","_this","includes","alert","setState","ShuffeledArray","newScore","topScore","concat","Object","toConsumableArray","_this2","this","components_Wrapper","map","picture","pics","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"us5GAiByBA,MAdzB,SAAoBC,GAChB,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KAEAH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOC,QAAS,kBAAIN,EAAMO,YAAYP,EAAMQ,MACzDP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMQ,GAAIE,IAAKV,EAAMW,kBCF1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WAAWL,EAAMa,kBCwE1BC,6MAtEbC,MAAQ,CACNC,WACAC,MAAO,EACPC,UAAW,EACXC,MAAO,MAKVC,QAAQ,SAACC,GAEV,OADmBA,EAAMC,KAAK,kBAAMC,KAAKC,SAAW,QAIlDjB,YAAc,SAACC,GACb,GAAIiB,EAAKV,MAAMI,MAAMO,SAASlB,GAE5BmB,MAAM,YACNF,EAAKG,SAAS,CACZT,MAAM,GACNF,MAAM,QAGH,CACN,IAAMY,EAAgBJ,EAAKL,QAAQK,EAAKV,MAAMC,UACvCc,EAAWL,EAAKV,MAAME,MAAQ,EAChCc,EAAWN,EAAKV,MAAMG,UACtBY,EAAWC,IACbA,EAAWD,GAKbL,EAAKG,SAAS,CACZT,MAAK,GAAAa,OAAAC,OAAAC,EAAA,EAAAD,CAAMR,EAAKV,MAAMI,OAAjB,CAAwBX,IAC7BS,MAAOa,EACPZ,UAAWa,EACXf,SAASa,8EAON,IAAAM,EAAAC,KACP,OACEnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,wBAAgBiC,KAAKrB,MAAMG,WAC3BjB,EAAAC,EAAAC,cAAA,qBAAaiC,KAAKrB,MAAME,QAG1BhB,EAAAC,EAAAC,cAACkC,EAAD,KAEGD,KAAKrB,MAAMC,SAASsB,IAAI,SAAAC,GAAO,OAC9BtC,EAAAC,EAAAC,cAACqC,EAAD,CACEhC,GAAI+B,EAAQ/B,GACZiC,IAAKF,EAAQ/B,GACbG,MAAO4B,EAAQ5B,MACfJ,YAAa4B,EAAK5B,yBA9DdmC,aCClBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4f179483.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./style.css\";\n\nfunction picdisplay(props) {\n    return (\n      <>\n      \n      <div className=\"card\" onClick={()=>props.handleClick(props.id)}>\n        <div className=\"img-container\">\n          <img alt={props.id} src={props.image} />\n\n        </div>\n    </div>\n    </>\n          )}\n            \n  \n          export default picdisplay\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;\n","import React, { Component } from \"react\";\nimport Pics from \"./components/pics\";\nimport Wrapper from \"./components/Wrapper\";\nimport Pictures from \"./pics.json\";\nclass App extends Component {\n\n  state = {\n    Pictures,\n    score: 0,\n    highScore: 0,\n    count: []\n  };\n\n  // add shuffle function\n\n shuffle=(array)=> {\n  const newarray = array.sort(() => Math.random() - 0.5);\nreturn newarray;\n}\n\n  handleClick = (id) => {\n    if (this.state.count.includes(id)) {\n      // you lose\n      alert('you lose')\n      this.setState({\n        count:[],\n        score:0,\n        //highScore: topScore\n      })\n    } else {\n     const ShuffeledArray= this.shuffle(this.state.Pictures)\n      const newScore = this.state.score + 1;\n      let topScore = this.state.highScore;\n      if (newScore > topScore) {\n        topScore = newScore\n\n      }\n\n      // keep going\n      this.setState({\n        count: [...this.state.count, id],\n        score: newScore,\n        highScore: topScore,\n        Pictures:ShuffeledArray\n      })\n    }\n\n\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"title\">\n          <h1>clicky game</h1>\n          <h2>highScore, {this.state.highScore}</h2>\n          <h2> score, {this.state.score}</h2>\n        </div>\n\n        <Wrapper>\n\n          {this.state.Pictures.map(picture => (\n            <Pics\n              id={picture.id}\n              key={picture.id}\n              image={picture.image}\n              handleClick={this.handleClick}\n\n            />\n          ))}\n        </Wrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}